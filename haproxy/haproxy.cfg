global
  #log /dev/log  local0
  #log /dev/log  local1 notice
  #chroot /var/lib/haproxy
  #stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
  #stats timeout 30s
  user haproxy
  group haproxy
  daemon

  # Default SSL material locations
  ca-base /etc/ssl/certs
  crt-base /etc/ssl/private

  # generated 2021-09-19, Mozilla Guideline v5.6, HAProxy 2..3.14, OpenSSL 1.1.1d, intermediate configuration
  # https://ssl-config.mozilla.org/#server=haproxy&version=2..3.14&config=intermediate&openssl=1.1.1d&guideline=5.6
  # intermediate configuration
  ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
  ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
  ssl-default-bind-options prefer-client-ciphers no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets

  ssl-default-server-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
  ssl-default-server-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
  ssl-default-server-options no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets

defaults
  log global
  mode  http
  option  httplog
  option  dontlognull
  timeout connect 5000
  timeout client  50000
  timeout server  50000

userlist flowercredentials
  user "${FLOWER_AUTH_USERNAME}" insecure-password "${FLOWER_AUTH_PASSWORD}"

frontend internet
  # where do you listen?
  bind *:80
  bind *:81
  bind *:82
  bind *:83

  # rules for local dev
  acl is-webhook dst_port 81
  acl is-workers dst_port 82
  acl is-weather dst_port 83

  # rules for production
  acl is-webhook	          hdr_end(host) -i airflow-webhook.austinmobility.io
  acl is-workers            hdr_end(host) -i airflow-workers.austinmobility.io
  acl is-workers-production hdr_end(host) -i airflow-workers.austinmobility.io
  acl is-weather	          hdr(host)     -i airflow-weather.austinmobility.io

  acl is-auth http_auth(flowercredentials) 

  # auth rules
  http-request auth realm flower if !is-auth is-workers is-workers-production

  # act on the rules
  use_backend weather if is-weather
  use_backend webhook if is-webhook
  use_backend workers if is-workers

  # default to airflow web ui
  default_backend airflow


# airflow webservice as provided by a modified copy of airflow
backend airflow
  option httpchk GET /
  default-server inter 5s maxconn 50
  server airflow airflow-webserver:8080 check

# a flask app offering a web hook used to git pull the latest version of the airflow DAGs
backend webhook 
  option httpchk GET /
  default-server inter 5s maxconn 50
  server webhook webhook:5000 check

# a web application used to monitor the workers' statuses
backend workers
  option httpchk GET /
  default-server inter 5s maxconn 50
  server workers flower:5555 check

# a httpd server serving a static site with the weather data which is useful for testing
backend weather
  option httpchk GET /
  default-server inter 5s maxconn 50
  server weather weather:80 check
